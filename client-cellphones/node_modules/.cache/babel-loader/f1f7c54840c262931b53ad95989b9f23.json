{"ast":null,"code":"import axios from 'axios';\nexport const login = user => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post('http://localhost:4000/user/login', user);\n    dispatch({\n      type: 'USER_LOGIN_SUCCESS',\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_LOGIN_FAIL',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const SignupUser = user => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post('http://localhost:4000/user/register', user);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({\n      type: 'USER_SIGNUP_SUCCESS',\n      payload: data\n    });\n    document.location.href = '/';\n  } catch (error) {}\n};\nexport const SignoutUser = user => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: 'USER_SIGNOUT_SUCCESS',\n    payload: {}\n  });\n  document.location.href = '/';\n};\nexport const getAllUser = () => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  try {\n    const {\n      data\n    } = await axios.get('http://localhost:4000/user');\n    dispatch({\n      type: 'GET_ALL_USER',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_ALL_USER_FAIL',\n      payload: error.message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  try {\n    const {\n      data\n    } = await axios.delete(\"http://localhost:4000/user/delete/\".concat(userId));\n    dispatch({\n      type: 'DELETE_USER',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'DELETE_USER_FAIL',\n      error: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","login","user","dispatch","data","post","type","payload","localStorage","setItem","JSON","stringify","error","response","message","SignupUser","document","location","href","SignoutUser","removeItem","getAllUser","getState","userSignin","userInfo","get","deleteUser","userId","delete","concat"],"sources":["D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/cellphons/client-cellphones/src/actions/UserAction.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n    try {\r\n      const {data} = await axios.post('http://localhost:4000/user/login', user)\r\n      dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({ type: 'USER_LOGIN_FAIL', payload: error.response.data.message });\r\n    }\r\n};\r\n\r\n\r\nexport const SignupUser = (user) => async (dispatch) => {\r\n    try {\r\n      const {data} = await axios.post('http://localhost:4000/user/register', user)\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      dispatch({ type: 'USER_SIGNUP_SUCCESS', payload: data });\r\n      document.location.href = '/';\r\n    } catch (error) {\r\n    }\r\n};\r\n\r\nexport const SignoutUser = (user) => async (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({type: 'USER_SIGNOUT_SUCCESS', payload: {} })\r\n  document.location.href = '/';\r\n};\r\n\r\nexport const getAllUser = () => async (dispatch, getState) => {\r\n  const {\r\n    userSignin: {userInfo},\r\n  } = getState()\r\n  try {\r\n    const {data} = await  axios.get('http://localhost:4000/user')\r\n    dispatch({type: 'GET_ALL_USER', payload: data})\r\n  } catch (error) {\r\n    dispatch({type: 'GET_ALL_USER_FAIL', payload: error.message})\r\n  }\r\n}\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n  const {\r\n    userSignin: {userInfo},\r\n  } = getState()\r\n  try {\r\n    const {data} = await axios.delete(`http://localhost:4000/user/delete/${userId}`)\r\n    dispatch({type: 'DELETE_USER', payload: data})\r\n  } catch (error) {\r\n    dispatch({type: 'DELETE_USER_FAIL', error: error.message})\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,kCAAkC,EAAEH,IAAI,CAAC;IACzEC,QAAQ,CAAC;MAAEG,IAAI,EAAE,oBAAoB;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;IACvDI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdT,QAAQ,CAAC;MAAEG,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAEK,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU;IAAQ,CAAC,CAAC;EAC7E;AACJ,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAIb,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,qCAAqC,EAAEH,IAAI,CAAC;IAC5EM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;IACtDD,QAAQ,CAAC;MAAEG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;IACxDY,QAAQ,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC,CAAC,OAAON,KAAK,EAAE,CAChB;AACJ,CAAC;AAED,OAAO,MAAMO,WAAW,GAAIjB,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACvDK,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;EACnCjB,QAAQ,CAAC;IAACG,IAAI,EAAE,sBAAsB;IAAEC,OAAO,EAAE,CAAC;EAAE,CAAC,CAAC;EACtDS,QAAQ,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;AAC9B,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAM,OAAOlB,QAAQ,EAAEmB,QAAQ,KAAK;EAC5D,MAAM;IACJC,UAAU,EAAE;MAACC;IAAQ;EACvB,CAAC,GAAGF,QAAQ,CAAC,CAAC;EACd,IAAI;IACF,MAAM;MAAClB;IAAI,CAAC,GAAG,MAAOJ,KAAK,CAACyB,GAAG,CAAC,4BAA4B,CAAC;IAC7DtB,QAAQ,CAAC;MAACG,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdT,QAAQ,CAAC;MAACG,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAEK,KAAK,CAACE;IAAO,CAAC,CAAC;EAC/D;AACF,CAAC;AAED,OAAO,MAAMY,UAAU,GAAIC,MAAM,IAAK,OAAOxB,QAAQ,EAAEmB,QAAQ,KAAK;EAClE,MAAM;IACJC,UAAU,EAAE;MAACC;IAAQ;EACvB,CAAC,GAAGF,QAAQ,CAAC,CAAC;EACd,IAAI;IACF,MAAM;MAAClB;IAAI,CAAC,GAAG,MAAMJ,KAAK,CAAC4B,MAAM,sCAAAC,MAAA,CAAsCF,MAAM,CAAE,CAAC;IAChFxB,QAAQ,CAAC;MAACG,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdT,QAAQ,CAAC;MAACG,IAAI,EAAE,kBAAkB;MAAEM,KAAK,EAAEA,KAAK,CAACE;IAAO,CAAC,CAAC;EAC5D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}