{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\PTIT\\\\NAM_4\\\\KI_1\\\\LT_WEB\\\\BTL_GiuaKy\\\\cellphons\\\\client-cellphones\\\\src\\\\components\\\\AIChatbot\\\\AIChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AIChatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIChatbot(_ref) {\n  _s();\n  let {\n    products = []\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Xin chào! Tôi là AI Assistant của Cellphones. Tôi có thể giúp bạn tìm hiểu về các sản phẩm điện thoại, so sánh tính năng, và đưa ra gợi ý phù hợp. Bạn muốn hỏi gì?\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Real AI responses using server-side GenAI proxy\n  const getAIResponse = async userMessage => {\n    setIsTyping(true);\n    try {\n      var _json$data, _json$data2, _json$data2$raw, _json$data3, _json$data3$raw;\n      const resp = await fetch('http://localhost:4000/genai/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: userMessage\n        })\n      });\n      const json = await resp.json();\n      // Try to extract a sensible text field from responses\n      const aiText = (json === null || json === void 0 ? void 0 : (_json$data = json.data) === null || _json$data === void 0 ? void 0 : _json$data.text) || (json === null || json === void 0 ? void 0 : (_json$data2 = json.data) === null || _json$data2 === void 0 ? void 0 : (_json$data2$raw = _json$data2.raw) === null || _json$data2$raw === void 0 ? void 0 : _json$data2$raw.text) || (json === null || json === void 0 ? void 0 : (_json$data3 = json.data) === null || _json$data3 === void 0 ? void 0 : (_json$data3$raw = _json$data3.raw) === null || _json$data3$raw === void 0 ? void 0 : _json$data3$raw.candidates) && json.data.raw.candidates.map(c => c.output || '').join('\\n') || 'Xin lỗi, tôi chưa nhận được phản hồi từ AI.';\n      return aiText;\n    } catch (err) {\n      console.error('AI fetch error', err);\n      return 'Lỗi khi gọi AI, thử lại sau.';\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!inputText.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    const botResponse = await getAIResponse(inputText);\n    const botMessage = {\n      id: Date.now() + 1,\n      text: botResponse,\n      sender: 'bot',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, botMessage]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const quickQuestions = [\"iPhone nào tốt nhất?\", \"So sánh Samsung và iPhone\", \"Điện thoại nào pin tốt?\", \"Camera nào chụp đêm tốt?\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-chatbot \".concat(isOpen ? 'open' : ''),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chat-icon\",\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chat-text\",\n        children: \"AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: \"\\u0110ang ho\\u1EA1t \\u0111\\u1ED9ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setIsOpen(false),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message \".concat(message.sender),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.text.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [line, index < message.text.split('\\n').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 93\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString('vi-VN', {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), messages.length === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"C\\xE2u h\\u1ECFi th\\u01B0\\u1EDDng g\\u1EB7p:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-buttons\",\n          children: quickQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"question-btn\",\n            onClick: () => setInputText(question),\n            children: question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n...\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-btn\",\n          disabled: !inputText.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCE4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(AIChatbot, \"+D1nFbYy5zCb021/Gcmw+no/smg=\");\n_c = AIChatbot;\nexport default AIChatbot;\nvar _c;\n$RefreshReg$(_c, \"AIChatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AIChatbot","_ref","_s","products","isOpen","setIsOpen","messages","setMessages","id","text","sender","timestamp","Date","inputText","setInputText","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","getAIResponse","userMessage","_json$data","_json$data2","_json$data2$raw","_json$data3","_json$data3$raw","resp","fetch","method","headers","body","JSON","stringify","prompt","json","aiText","data","raw","candidates","map","c","output","join","err","console","error","handleSendMessage","trim","now","prev","botResponse","botMessage","handleKeyPress","e","key","shiftKey","preventDefault","quickQuestions","className","concat","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message","split","line","index","length","toLocaleTimeString","hour","minute","ref","question","type","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/cellphons/client-cellphones/src/components/AIChatbot/AIChatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AIChatbot.css';\r\n\r\nfunction AIChatbot({ products = [] }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            id: 1,\r\n            text: \"Xin chào! Tôi là AI Assistant của Cellphones. Tôi có thể giúp bạn tìm hiểu về các sản phẩm điện thoại, so sánh tính năng, và đưa ra gợi ý phù hợp. Bạn muốn hỏi gì?\",\r\n            sender: 'bot',\r\n            timestamp: new Date()\r\n        }\r\n    ]);\r\n    const [inputText, setInputText] = useState('');\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    // Real AI responses using server-side GenAI proxy\r\n    const getAIResponse = async (userMessage) => {\r\n        setIsTyping(true);\r\n        try {\r\n            const resp = await fetch('http://localhost:4000/genai/chat', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ prompt: userMessage })\r\n            });\r\n\r\n            const json = await resp.json();\r\n            // Try to extract a sensible text field from responses\r\n            const aiText = json?.data?.text || json?.data?.raw?.text ||\r\n                (json?.data?.raw?.candidates && json.data.raw.candidates.map(c=>c.output||'').join('\\n')) ||\r\n                'Xin lỗi, tôi chưa nhận được phản hồi từ AI.';\r\n\r\n            return aiText;\r\n        } catch (err) {\r\n            console.error('AI fetch error', err);\r\n            return 'Lỗi khi gọi AI, thử lại sau.';\r\n        } finally {\r\n            setIsTyping(false);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!inputText.trim()) return;\r\n\r\n        const userMessage = {\r\n            id: Date.now(),\r\n            text: inputText,\r\n            sender: 'user',\r\n            timestamp: new Date()\r\n        };\r\n\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInputText('');\r\n\r\n        const botResponse = await getAIResponse(inputText);\r\n        \r\n        const botMessage = {\r\n            id: Date.now() + 1,\r\n            text: botResponse,\r\n            sender: 'bot',\r\n            timestamp: new Date()\r\n        };\r\n\r\n        setMessages(prev => [...prev, botMessage]);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    const quickQuestions = [\r\n        \"iPhone nào tốt nhất?\",\r\n        \"So sánh Samsung và iPhone\",\r\n        \"Điện thoại nào pin tốt?\",\r\n        \"Camera nào chụp đêm tốt?\"\r\n    ];\r\n\r\n    return (\r\n        <div className={`ai-chatbot ${isOpen ? 'open' : ''}`}>\r\n            {/* Chat Button */}\r\n            <button \r\n                className=\"chat-toggle\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                <span className=\"chat-icon\">🤖</span>\r\n                <span className=\"chat-text\">AI Assistant</span>\r\n            </button>\r\n\r\n            {/* Chat Window */}\r\n            <div className=\"chat-window\">\r\n                <div className=\"chat-header\">\r\n                    <div className=\"bot-info\">\r\n                        <div className=\"bot-avatar\">🤖</div>\r\n                        <div className=\"bot-details\">\r\n                            <h3>AI Assistant</h3>\r\n                            <span className=\"status\">Đang hoạt động</span>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        className=\"close-btn\"\r\n                        onClick={() => setIsOpen(false)}\r\n                    >\r\n                        ✕\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((message) => (\r\n                        <div \r\n                            key={message.id} \r\n                            className={`message ${message.sender}`}\r\n                        >\r\n                            <div className=\"message-content\">\r\n                                <div className=\"message-text\">\r\n                                    {message.text.split('\\n').map((line, index) => (\r\n                                        <div key={index}>\r\n                                            {line}\r\n                                            {index < message.text.split('\\n').length - 1 && <br />}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"message-time\">\r\n                                    {message.timestamp.toLocaleTimeString('vi-VN', { \r\n                                        hour: '2-digit', \r\n                                        minute: '2-digit' \r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    \r\n                    {isTyping && (\r\n                        <div className=\"message bot\">\r\n                            <div className=\"message-content\">\r\n                                <div className=\"typing-indicator\">\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <div ref={messagesEndRef} />\r\n                </div>\r\n\r\n                {/* Quick Questions */}\r\n                {messages.length === 1 && (\r\n                    <div className=\"quick-questions\">\r\n                        <h4>Câu hỏi thường gặp:</h4>\r\n                        <div className=\"question-buttons\">\r\n                            {quickQuestions.map((question, index) => (\r\n                                <button \r\n                                    key={index}\r\n                                    className=\"question-btn\"\r\n                                    onClick={() => setInputText(question)}\r\n                                >\r\n                                    {question}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputText}\r\n                        onChange={(e) => setInputText(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        placeholder=\"Nhập câu hỏi của bạn...\"\r\n                        className=\"message-input\"\r\n                    />\r\n                    <button \r\n                        onClick={handleSendMessage}\r\n                        className=\"send-btn\"\r\n                        disabled={!inputText.trim()}\r\n                    >\r\n                        <span>📤</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AIChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}