{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nimport { BASE_URL } from '../constants/UserConstant';\nexport const axiosClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'content-type': 'application/json',\n    Accept: 'application/json'\n    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n    // 'Access-Control-Allow-Credentials': true,\n  },\n  paramsSerializer: params => {\n    return queryString.stringify(params, {\n      encode: false\n    });\n  }\n});\n\n// axiosClient.interceptors.request.use(async config => {\n//   const token = localStorage.getItem('tokens');\n//   config.headers.Authorization = `Bearer ${token}`;\n//   return config;\n// });\n\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n  return response;\n}, error => {\n  throw error;\n});","map":{"version":3,"names":["axios","queryString","BASE_URL","axiosClient","create","baseURL","headers","Accept","paramsSerializer","params","stringify","encode","interceptors","response","use","data","error"],"sources":["C:/Users/admin/Download/project-long/cellphones/client-cellphones/src/services/config.services.js"],"sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { BASE_URL } from '../constants/UserConstant';\r\n\r\nexport const axiosClient = axios.create({\r\n  baseURL:BASE_URL,\r\n  headers: {\r\n    'content-type': 'application/json',\r\n    Accept: 'application/json',\r\n    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n    // 'Access-Control-Allow-Credentials': true,\r\n  },\r\n  paramsSerializer: params => {\r\n    return queryString.stringify(params, {\r\n      encode: false,\r\n    });\r\n  },\r\n});\r\n\r\n// axiosClient.interceptors.request.use(async config => {\r\n//   const token = localStorage.getItem('tokens');\r\n//   config.headers.Authorization = `Bearer ${token}`;\r\n//   return config;\r\n// });\r\n\r\naxiosClient.interceptors.response.use(\r\n  response => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  error => {\r\n    throw error;\r\n  },\r\n);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC,SAASC,QAAQ,QAAQ,2BAA2B;AAEpD,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAM,CAAC;EACtCC,OAAO,EAACH,QAAQ;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;IACR;IACA;EACF,CAAC;EACDC,gBAAgB,EAAEC,MAAM,IAAI;IAC1B,OAAOR,WAAW,CAACS,SAAS,CAACD,MAAM,EAAE;MACnCE,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEAR,WAAW,CAACS,YAAY,CAACC,QAAQ,CAACC,GAAG,CACnCD,QAAQ,IAAI;EACV,IAAIA,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE;IAC7B,OAAOF,QAAQ,CAACE,IAAI;EACtB;EACA,OAAOF,QAAQ;AACjB,CAAC,EACDG,KAAK,IAAI;EACP,MAAMA,KAAK;AACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}