{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n  var _super = _createSuper(Field);\n\n  // ============================== Subscriptions ==============================\n  function Field(props) {\n    var _this;\n    _classCallCheck(this, Field);\n    _this = _super.call(this, props);\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    /**\r\n     * Follow state should not management in State since it will async update by React.\r\n     * This makes first render of form can not get correct state value.\r\n     */\n\n    _this.touched = false;\n    /** Mark when touched & validated. Currently only used for `dependencies` */\n\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n        preserve = _this$props.preserve,\n        isListField = _this$props.isListField,\n        name = _this$props.name;\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n        name = _this$props2.name,\n        fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n        prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n        _this$props3$rules = _this$props3.rules,\n        rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n        fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n        return rule;\n      });\n    };\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\r\n       * Clean up current node.\r\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n        shouldUpdate = _this$props4.shouldUpdate,\n        _this$props4$dependen = _this$props4.dependencies,\n        dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n        onReset = _this$props4.onReset;\n      var store = info.store;\n      var namePath = _this.getNamePath();\n      var prevValue = _this.getValue(prevStore);\n      var curValue = _this.getValue(store);\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n            if (onReset) {\n              onReset();\n            }\n            _this.refresh();\n            return;\n          }\n          break;\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n              _this.dirty = true;\n              _this.reRender();\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n              return;\n            }\n            break;\n          }\n        case 'dependenciesUpdate':\n          {\n            /**\r\n             * Trigger when marked `dependencies` updated. Related fields will all update\r\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n              return;\n            }\n            break;\n          }\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n            return;\n          }\n          break;\n      }\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n        var _this$props5 = _this.props,\n          _this$props5$validate = _this$props5.validateFirst,\n          validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n          messageVariables = _this$props5.messageVariables;\n        var _ref2 = options || {},\n          triggerName = _ref2.triggerName;\n        var filteredRules = _this.getRules();\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n            if (!validateTrigger) {\n              return true;\n            }\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          if (_this.validatePromise === rootPromise) {\n            _this.validatePromise = null;\n            _this.errors = errors;\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = []; // Force trigger re-render since we need sync renderProps with new meta\n\n      _this.reRender();\n      return rootPromise;\n    };\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n    _this.isFieldDirty = function () {\n      return _this.dirty;\n    };\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    }; // ============================= Child Component =============================\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n      var childList = toChildrenArray(children);\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n      var namePath = _this.getNamePath();\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n        trigger = _this$props6.trigger,\n        validateTrigger = _this$props6.validateTrigger,\n        getValueFromEvent = _this$props6.getValueFromEvent,\n        normalize = _this$props6.normalize,\n        valuePropName = _this$props6.valuePropName,\n        getValueProps = _this$props6.getValueProps,\n        fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n      var namePath = _this.getNamePath();\n      var getInternalHooks = fieldContext.getInternalHooks,\n        getFieldsValue = fieldContext.getFieldsValue;\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        dispatch = _getInternalHooks.dispatch;\n      var value = _this.getValue();\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var originTriggerFunc = childProps[trigger];\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n        var newValue;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n          var rules = _this.props.rules;\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    }; // Register on init\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n        initEntityValue = _getInternalHooks2.initEntityValue;\n      initEntityValue(_assertThisInitialized(_this));\n    }\n    return _this;\n  }\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n        shouldUpdate = _this$props7.shouldUpdate,\n        fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n          registerField = _getInternalHooks3.registerField;\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n      var _this$getOnlyChild = this.getOnlyChild(children),\n        child = _this$getOnlyChild.child,\n        isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n      var returnChildNode;\n      if (isFunction) {\n        returnChildNode = child;\n      } else if (/*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n  return Field;\n}(React.Component);\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\nfunction WrapperField(_ref4) {\n  var name = _ref4.name,\n    restProps = _objectWithoutProperties(_ref4, [\"name\"]);\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\nexport default WrapperField;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","toChildrenArray","warning","React","FieldContext","HOOK_MARK","toArray","validateRules","containsNamePath","defaultGetValueFromEvent","getNamePath","getValue","requireUpdate","shouldUpdate","prev","next","prevValue","nextValue","info","source","Field","_React$Component","_super","props","_this","call","state","resetCount","cancelRegisterFunc","mounted","touched","dirty","validatePromise","errors","cancelRegister","_this$props","preserve","isListField","name","_this$props2","fieldContext","_fieldContext$prefixN","prefixName","undefined","concat","getRules","_this$props3","_this$props3$rules","rules","map","rule","refresh","setState","_ref","onStoreChange","prevStore","namePathList","_this$props4","_this$props4$dependen","dependencies","onReset","store","namePath","curValue","namePathMatch","type","data","validating","Promise","resolve","reRender","length","dependencyList","some","dependency","relatedFields","options","currentValue","rootPromise","then","_this$props5","_this$props5$validate","validateFirst","messageVariables","_ref2","triggerName","filteredRules","filter","validateTrigger","triggerList","includes","promise","catch","e","arguments","isFieldValidating","isFieldTouched","isFieldDirty","getErrors","isList","isPreserve","getMeta","prevValidating","meta","getOnlyChild","children","getControlled","isFunction","childList","isValidElement","child","getFieldsValue","childProps","_this$props6","trigger","getValueFromEvent","normalize","valuePropName","getValueProps","mergedValidateTrigger","getInternalHooks","_getInternalHooks","dispatch","value","mergedGetValueProps","val","originTriggerFunc","control","newValue","_len","args","Array","_key","apply","validateTriggerList","forEach","originTrigger","_getInternalHooks2","initEntityValue","key","componentDidMount","_this$props7","_getInternalHooks3","registerField","componentWillUnmount","forceUpdate","render","_this$getOnlyChild","returnChildNode","cloneElement","createElement","Fragment","Component","contextType","defaultProps","WrapperField","_ref4","restProps","useContext","join","process","env","NODE_ENV"],"sources":["C:/Users/admin/Download/project-long/cellphones/client-cellphones/node_modules/rc-field-form/es/Field.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\r\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\r\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\r\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\r\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\r\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\r\nimport warning from \"rc-util/es/warning\";\r\nimport * as React from 'react';\r\nimport FieldContext, { HOOK_MARK } from './FieldContext';\r\nimport { toArray } from './utils/typeUtil';\r\nimport { validateRules } from './utils/validateUtil';\r\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\r\n\r\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\r\n  if (typeof shouldUpdate === 'function') {\r\n    return shouldUpdate(prev, next, 'source' in info ? {\r\n      source: info.source\r\n    } : {});\r\n  }\r\n\r\n  return prevValue !== nextValue;\r\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\r\n\r\n\r\nvar Field = /*#__PURE__*/function (_React$Component) {\r\n  _inherits(Field, _React$Component);\r\n\r\n  var _super = _createSuper(Field);\r\n\r\n  // ============================== Subscriptions ==============================\r\n  function Field(props) {\r\n    var _this;\r\n\r\n    _classCallCheck(this, Field);\r\n\r\n    _this = _super.call(this, props);\r\n    _this.state = {\r\n      resetCount: 0\r\n    };\r\n    _this.cancelRegisterFunc = null;\r\n    _this.mounted = false;\r\n    /**\r\n     * Follow state should not management in State since it will async update by React.\r\n     * This makes first render of form can not get correct state value.\r\n     */\r\n\r\n    _this.touched = false;\r\n    /** Mark when touched & validated. Currently only used for `dependencies` */\r\n\r\n    _this.dirty = false;\r\n    _this.validatePromise = null;\r\n    _this.errors = [];\r\n\r\n    _this.cancelRegister = function () {\r\n      var _this$props = _this.props,\r\n          preserve = _this$props.preserve,\r\n          isListField = _this$props.isListField,\r\n          name = _this$props.name;\r\n\r\n      if (_this.cancelRegisterFunc) {\r\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\r\n      }\r\n\r\n      _this.cancelRegisterFunc = null;\r\n    }; // ================================== Utils ==================================\r\n\r\n\r\n    _this.getNamePath = function () {\r\n      var _this$props2 = _this.props,\r\n          name = _this$props2.name,\r\n          fieldContext = _this$props2.fieldContext;\r\n      var _fieldContext$prefixN = fieldContext.prefixName,\r\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\r\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\r\n    };\r\n\r\n    _this.getRules = function () {\r\n      var _this$props3 = _this.props,\r\n          _this$props3$rules = _this$props3.rules,\r\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\r\n          fieldContext = _this$props3.fieldContext;\r\n      return rules.map(function (rule) {\r\n        if (typeof rule === 'function') {\r\n          return rule(fieldContext);\r\n        }\r\n\r\n        return rule;\r\n      });\r\n    };\r\n\r\n    _this.refresh = function () {\r\n      if (!_this.mounted) return;\r\n      /**\r\n       * Clean up current node.\r\n       */\r\n\r\n      _this.setState(function (_ref) {\r\n        var resetCount = _ref.resetCount;\r\n        return {\r\n          resetCount: resetCount + 1\r\n        };\r\n      });\r\n    }; // ========================= Field Entity Interfaces =========================\r\n    // Trigger by store update. Check if need update the component\r\n\r\n\r\n    _this.onStoreChange = function (prevStore, namePathList, info) {\r\n      var _this$props4 = _this.props,\r\n          shouldUpdate = _this$props4.shouldUpdate,\r\n          _this$props4$dependen = _this$props4.dependencies,\r\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\r\n          onReset = _this$props4.onReset;\r\n      var store = info.store;\r\n\r\n      var namePath = _this.getNamePath();\r\n\r\n      var prevValue = _this.getValue(prevStore);\r\n\r\n      var curValue = _this.getValue(store);\r\n\r\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\r\n\r\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\r\n        _this.touched = true;\r\n        _this.dirty = true;\r\n        _this.validatePromise = null;\r\n        _this.errors = [];\r\n      }\r\n\r\n      switch (info.type) {\r\n        case 'reset':\r\n          if (!namePathList || namePathMatch) {\r\n            // Clean up state\r\n            _this.touched = false;\r\n            _this.dirty = false;\r\n            _this.validatePromise = null;\r\n            _this.errors = [];\r\n\r\n            if (onReset) {\r\n              onReset();\r\n            }\r\n\r\n            _this.refresh();\r\n\r\n            return;\r\n          }\r\n\r\n          break;\r\n\r\n        case 'setField':\r\n          {\r\n            if (namePathMatch) {\r\n              var data = info.data;\r\n\r\n              if ('touched' in data) {\r\n                _this.touched = data.touched;\r\n              }\r\n\r\n              if ('validating' in data && !('originRCField' in data)) {\r\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\r\n              }\r\n\r\n              if ('errors' in data) {\r\n                _this.errors = data.errors || [];\r\n              }\r\n\r\n              _this.dirty = true;\r\n\r\n              _this.reRender();\r\n\r\n              return;\r\n            } // Handle update by `setField` with `shouldUpdate`\r\n\r\n\r\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\r\n              _this.reRender();\r\n\r\n              return;\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'dependenciesUpdate':\r\n          {\r\n            /**\r\n             * Trigger when marked `dependencies` updated. Related fields will all update\r\n             */\r\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\r\n            // emitted earlier and they will work there\r\n            // If set it may cause unnecessary twice rerendering\r\n\r\n            if (dependencyList.some(function (dependency) {\r\n              return containsNamePath(info.relatedFields, dependency);\r\n            })) {\r\n              _this.reRender();\r\n\r\n              return;\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        default:\r\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\r\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\r\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\r\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\r\n          // 2.\r\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\r\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\r\n          //       is not provided\r\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\r\n          //       else to check if value changed\r\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\r\n            _this.reRender();\r\n\r\n            return;\r\n          }\r\n\r\n          break;\r\n      }\r\n\r\n      if (shouldUpdate === true) {\r\n        _this.reRender();\r\n      }\r\n    };\r\n\r\n    _this.validateRules = function (options) {\r\n      // We should fixed namePath & value to avoid developer change then by form function\r\n      var namePath = _this.getNamePath();\r\n\r\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\r\n\r\n\r\n      var rootPromise = Promise.resolve().then(function () {\r\n        if (!_this.mounted) {\r\n          return [];\r\n        }\r\n\r\n        var _this$props5 = _this.props,\r\n            _this$props5$validate = _this$props5.validateFirst,\r\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\r\n            messageVariables = _this$props5.messageVariables;\r\n\r\n        var _ref2 = options || {},\r\n            triggerName = _ref2.triggerName;\r\n\r\n        var filteredRules = _this.getRules();\r\n\r\n        if (triggerName) {\r\n          filteredRules = filteredRules.filter(function (rule) {\r\n            var validateTrigger = rule.validateTrigger;\r\n\r\n            if (!validateTrigger) {\r\n              return true;\r\n            }\r\n\r\n            var triggerList = toArray(validateTrigger);\r\n            return triggerList.includes(triggerName);\r\n          });\r\n        }\r\n\r\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\r\n        promise.catch(function (e) {\r\n          return e;\r\n        }).then(function () {\r\n          var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n          if (_this.validatePromise === rootPromise) {\r\n            _this.validatePromise = null;\r\n            _this.errors = errors;\r\n\r\n            _this.reRender();\r\n          }\r\n        });\r\n        return promise;\r\n      });\r\n      _this.validatePromise = rootPromise;\r\n      _this.dirty = true;\r\n      _this.errors = []; // Force trigger re-render since we need sync renderProps with new meta\r\n\r\n      _this.reRender();\r\n\r\n      return rootPromise;\r\n    };\r\n\r\n    _this.isFieldValidating = function () {\r\n      return !!_this.validatePromise;\r\n    };\r\n\r\n    _this.isFieldTouched = function () {\r\n      return _this.touched;\r\n    };\r\n\r\n    _this.isFieldDirty = function () {\r\n      return _this.dirty;\r\n    };\r\n\r\n    _this.getErrors = function () {\r\n      return _this.errors;\r\n    };\r\n\r\n    _this.isListField = function () {\r\n      return _this.props.isListField;\r\n    };\r\n\r\n    _this.isList = function () {\r\n      return _this.props.isList;\r\n    };\r\n\r\n    _this.isPreserve = function () {\r\n      return _this.props.preserve;\r\n    }; // ============================= Child Component =============================\r\n\r\n\r\n    _this.getMeta = function () {\r\n      // Make error & validating in cache to save perf\r\n      _this.prevValidating = _this.isFieldValidating();\r\n      var meta = {\r\n        touched: _this.isFieldTouched(),\r\n        validating: _this.prevValidating,\r\n        errors: _this.errors,\r\n        name: _this.getNamePath()\r\n      };\r\n      return meta;\r\n    }; // Only return validate child node. If invalidate, will do nothing about field.\r\n\r\n\r\n    _this.getOnlyChild = function (children) {\r\n      // Support render props\r\n      if (typeof children === 'function') {\r\n        var meta = _this.getMeta();\r\n\r\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\r\n          isFunction: true\r\n        });\r\n      } // Filed element only\r\n\r\n\r\n      var childList = toChildrenArray(children);\r\n\r\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\r\n        return {\r\n          child: childList,\r\n          isFunction: false\r\n        };\r\n      }\r\n\r\n      return {\r\n        child: childList[0],\r\n        isFunction: false\r\n      };\r\n    }; // ============================== Field Control ==============================\r\n\r\n\r\n    _this.getValue = function (store) {\r\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\r\n\r\n      var namePath = _this.getNamePath();\r\n\r\n      return getValue(store || getFieldsValue(true), namePath);\r\n    };\r\n\r\n    _this.getControlled = function () {\r\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n      var _this$props6 = _this.props,\r\n          trigger = _this$props6.trigger,\r\n          validateTrigger = _this$props6.validateTrigger,\r\n          getValueFromEvent = _this$props6.getValueFromEvent,\r\n          normalize = _this$props6.normalize,\r\n          valuePropName = _this$props6.valuePropName,\r\n          getValueProps = _this$props6.getValueProps,\r\n          fieldContext = _this$props6.fieldContext;\r\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\r\n\r\n      var namePath = _this.getNamePath();\r\n\r\n      var getInternalHooks = fieldContext.getInternalHooks,\r\n          getFieldsValue = fieldContext.getFieldsValue;\r\n\r\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\r\n          dispatch = _getInternalHooks.dispatch;\r\n\r\n      var value = _this.getValue();\r\n\r\n      var mergedGetValueProps = getValueProps || function (val) {\r\n        return _defineProperty({}, valuePropName, val);\r\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\r\n\r\n      var originTriggerFunc = childProps[trigger];\r\n\r\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\r\n\r\n\r\n      control[trigger] = function () {\r\n        // Mark as touched\r\n        _this.touched = true;\r\n        _this.dirty = true;\r\n        var newValue;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        if (getValueFromEvent) {\r\n          newValue = getValueFromEvent.apply(void 0, args);\r\n        } else {\r\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\r\n        }\r\n\r\n        if (normalize) {\r\n          newValue = normalize(newValue, value, getFieldsValue(true));\r\n        }\r\n\r\n        dispatch({\r\n          type: 'updateValue',\r\n          namePath: namePath,\r\n          value: newValue\r\n        });\r\n\r\n        if (originTriggerFunc) {\r\n          originTriggerFunc.apply(void 0, args);\r\n        }\r\n      }; // Add validateTrigger\r\n\r\n\r\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\r\n      validateTriggerList.forEach(function (triggerName) {\r\n        // Wrap additional function of component, so that we can get latest value from store\r\n        var originTrigger = control[triggerName];\r\n\r\n        control[triggerName] = function () {\r\n          if (originTrigger) {\r\n            originTrigger.apply(void 0, arguments);\r\n          } // Always use latest rules\r\n\r\n\r\n          var rules = _this.props.rules;\r\n\r\n          if (rules && rules.length) {\r\n            // We dispatch validate to root,\r\n            // since it will update related data with other field with same name\r\n            dispatch({\r\n              type: 'validateField',\r\n              namePath: namePath,\r\n              triggerName: triggerName\r\n            });\r\n          }\r\n        };\r\n      });\r\n      return control;\r\n    }; // Register on init\r\n\r\n\r\n    if (props.fieldContext) {\r\n      var getInternalHooks = props.fieldContext.getInternalHooks;\r\n\r\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\r\n          initEntityValue = _getInternalHooks2.initEntityValue;\r\n\r\n      initEntityValue(_assertThisInitialized(_this));\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  _createClass(Field, [{\r\n    key: \"componentDidMount\",\r\n    value: function componentDidMount() {\r\n      var _this$props7 = this.props,\r\n          shouldUpdate = _this$props7.shouldUpdate,\r\n          fieldContext = _this$props7.fieldContext;\r\n      this.mounted = true; // Register on init\r\n\r\n      if (fieldContext) {\r\n        var getInternalHooks = fieldContext.getInternalHooks;\r\n\r\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\r\n            registerField = _getInternalHooks3.registerField;\r\n\r\n        this.cancelRegisterFunc = registerField(this);\r\n      } // One more render for component in case fields not ready\r\n\r\n\r\n      if (shouldUpdate === true) {\r\n        this.reRender();\r\n      }\r\n    }\r\n  }, {\r\n    key: \"componentWillUnmount\",\r\n    value: function componentWillUnmount() {\r\n      this.cancelRegister();\r\n      this.mounted = false;\r\n    }\r\n  }, {\r\n    key: \"reRender\",\r\n    value: function reRender() {\r\n      if (!this.mounted) return;\r\n      this.forceUpdate();\r\n    }\r\n  }, {\r\n    key: \"render\",\r\n    value: function render() {\r\n      var resetCount = this.state.resetCount;\r\n      var children = this.props.children;\r\n\r\n      var _this$getOnlyChild = this.getOnlyChild(children),\r\n          child = _this$getOnlyChild.child,\r\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\r\n\r\n\r\n      var returnChildNode;\r\n\r\n      if (isFunction) {\r\n        returnChildNode = child;\r\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\r\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\r\n      } else {\r\n        warning(!child, '`children` of Field is not validate ReactElement.');\r\n        returnChildNode = child;\r\n      }\r\n\r\n      return /*#__PURE__*/React.createElement(React.Fragment, {\r\n        key: resetCount\r\n      }, returnChildNode);\r\n    }\r\n  }]);\r\n\r\n  return Field;\r\n}(React.Component);\r\n\r\nField.contextType = FieldContext;\r\nField.defaultProps = {\r\n  trigger: 'onChange',\r\n  valuePropName: 'value'\r\n};\r\n\r\nfunction WrapperField(_ref4) {\r\n  var name = _ref4.name,\r\n      restProps = _objectWithoutProperties(_ref4, [\"name\"]);\r\n\r\n  var fieldContext = React.useContext(FieldContext);\r\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\r\n  var key = 'keep';\r\n\r\n  if (!restProps.isListField) {\r\n    key = \"_\".concat((namePath || []).join('_'));\r\n  } // Warning if it's a directly list field.\r\n  // We can still support multiple level field preserve.\r\n\r\n\r\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\r\n    warning(false, '`preserve` should not apply on Form.List fields.');\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Field, _extends({\r\n    key: key,\r\n    name: namePath\r\n  }, restProps, {\r\n    fieldContext: fieldContext\r\n  }));\r\n}\r\n\r\nexport default WrapperField;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}