{"ast":null,"code":"import _objectSpread from \"D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/cellphons/client-cellphones/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// export const SortProductByDiscount = (products) => {\n//     products.sort((a,b) => {\n//         return (b.price - b.salePrice) - (a.price - a.salePrice);\n//     })\n//     const newSaleProducts = products.slice(0, 5);\n\n//     return handlePercentDiscount(newSaleProducts);\n// }\n\nexport const handlePercentDiscount = products => {\n  const newList = products.map(product => {\n    const percentDiscount = 100 - Math.round(product.salePrice * 100 / product.price);\n    // const price = formatPrice(product.price)\n    // const salePrice = formatPrice(product.salePrice)\n\n    return _objectSpread(_objectSpread({}, product), {}, {\n      percentDiscount: percentDiscount\n    });\n  });\n  return newList;\n};\nexport const formatPrice = price => {\n  const formatter = new Intl.NumberFormat('vi');\n  return formatter.format(price);\n};\nexport const getFirstCharacterUser = name => {\n  const arrCharacter = name.split('')[0];\n  return arrCharacter;\n};\nexport const formatDateOrderPaypal = timestamp => {\n  const d = new Date(timestamp);\n  const date = d.getHours() + \":\" + d.getMinutes() + \", \" + d.toDateString();\n  return date;\n};","map":{"version":3,"names":["handlePercentDiscount","products","newList","map","product","percentDiscount","Math","round","salePrice","price","_objectSpread","formatPrice","formatter","Intl","NumberFormat","format","getFirstCharacterUser","name","arrCharacter","split","formatDateOrderPaypal","timestamp","d","Date","date","getHours","getMinutes","toDateString"],"sources":["D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/cellphons/client-cellphones/src/untils/index.js"],"sourcesContent":["    // export const SortProductByDiscount = (products) => {\r\n    //     products.sort((a,b) => {\r\n    //         return (b.price - b.salePrice) - (a.price - a.salePrice);\r\n    //     })\r\n    //     const newSaleProducts = products.slice(0, 5);\r\n        \r\n    //     return handlePercentDiscount(newSaleProducts);\r\n    // }\r\n\r\n    export const handlePercentDiscount = (products) => { \r\n        const newList = products.map(product => {\r\n            const percentDiscount = 100 - Math.round(product.salePrice * 100 / product.price) ;\r\n            // const price = formatPrice(product.price)\r\n            // const salePrice = formatPrice(product.salePrice)\r\n\r\n\r\n            return {...product, percentDiscount: percentDiscount}\r\n        })\r\n        return newList;\r\n    }\r\n\r\n    export const formatPrice = (price) => {\r\n        const formatter = new Intl.NumberFormat('vi')\r\n        return formatter.format(price)\r\n    }\r\n\r\n    export const getFirstCharacterUser = (name) => {\r\n        const arrCharacter = name.split('')[0]\r\n        return arrCharacter\r\n    } \r\n\r\n    export const formatDateOrderPaypal = (timestamp) => {\r\n        const d = new Date( timestamp );\r\n        const date = d.getHours() + \":\" + d.getMinutes() + \", \" + d.toDateString();\r\n        return date\r\n    } \r\n    "],"mappings":";AAAI;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO,MAAMA,qBAAqB,GAAIC,QAAQ,IAAK;EAC/C,MAAMC,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAACC,OAAO,IAAI;IACpC,MAAMC,eAAe,GAAG,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,SAAS,GAAG,GAAG,GAAGJ,OAAO,CAACK,KAAK,CAAC;IACjF;IACA;;IAGA,OAAAC,aAAA,CAAAA,aAAA,KAAWN,OAAO;MAAEC,eAAe,EAAEA;IAAe;EACxD,CAAC,CAAC;EACF,OAAOH,OAAO;AAClB,CAAC;AAED,OAAO,MAAMS,WAAW,GAAIF,KAAK,IAAK;EAClC,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC;EAC7C,OAAOF,SAAS,CAACG,MAAM,CAACN,KAAK,CAAC;AAClC,CAAC;AAED,OAAO,MAAMO,qBAAqB,GAAIC,IAAI,IAAK;EAC3C,MAAMC,YAAY,GAAGD,IAAI,CAACE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtC,OAAOD,YAAY;AACvB,CAAC;AAED,OAAO,MAAME,qBAAqB,GAAIC,SAAS,IAAK;EAChD,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAAEF,SAAU,CAAC;EAC/B,MAAMG,IAAI,GAAGF,CAAC,CAACG,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAGH,CAAC,CAACI,UAAU,CAAC,CAAC,GAAG,IAAI,GAAGJ,CAAC,CAACK,YAAY,CAAC,CAAC;EAC1E,OAAOH,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}