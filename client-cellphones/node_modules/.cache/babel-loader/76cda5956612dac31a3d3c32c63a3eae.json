{"ast":null,"code":"import _regeneratorRuntime from \"D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/client-cellphones/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/client-cellphones/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/client-cellphones/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\STUDY\\\\PTIT\\\\NAM_4\\\\KI_1\\\\LT_WEB\\\\BTL_GiuaKy\\\\client-cellphones\\\\src\\\\components\\\\ARViewer\\\\ARViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ARViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ARViewer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var product = _ref.product;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isARMode = _useState2[0],\n      setIsARMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isVRMode = _useState4[0],\n      setIsVRMode = _useState4[1];\n\n  var _useState5 = useState('exterior'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentView = _useState6[0],\n      setCurrentView = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var canvasRef = useRef(null);\n  var videoRef = useRef(null); // Mock 3D model data - sẽ được thay thế bằng data thực tế từ backend\n\n  var modelData = {\n    exterior: {\n      name: 'Exterior View',\n      description: 'Xem bên ngoài thiết bị',\n      components: [{\n        name: 'Màn hình',\n        color: '#000000',\n        position: {\n          x: 0,\n          y: 0,\n          z: 0\n        }\n      }, {\n        name: 'Khung máy',\n        color: '#C0C0C0',\n        position: {\n          x: 0,\n          y: 0,\n          z: -1\n        }\n      }, {\n        name: 'Camera',\n        color: '#FF0000',\n        position: {\n          x: 0,\n          y: 0.5,\n          z: 0.5\n        }\n      }, {\n        name: 'Nút nguồn',\n        color: '#808080',\n        position: {\n          x: 0.3,\n          y: 0,\n          z: 0\n        }\n      }]\n    },\n    interior: {\n      name: 'Interior View',\n      description: 'Xem bên trong thiết bị',\n      components: [{\n        name: 'CPU',\n        color: '#00FF00',\n        position: {\n          x: 0,\n          y: 0,\n          z: 0\n        }\n      }, {\n        name: 'RAM',\n        color: '#0000FF',\n        position: {\n          x: 0.2,\n          y: 0,\n          z: 0\n        }\n      }, {\n        name: 'Storage',\n        color: '#FFFF00',\n        position: {\n          x: -0.2,\n          y: 0,\n          z: 0\n        }\n      }, {\n        name: 'Battery',\n        color: '#FF00FF',\n        position: {\n          x: 0,\n          y: -0.3,\n          z: 0\n        }\n      }, {\n        name: 'Motherboard',\n        color: '#00FFFF',\n        position: {\n          x: 0,\n          y: 0,\n          z: -0.1\n        }\n      }]\n    },\n    exploded: {\n      name: 'Exploded View',\n      description: 'Xem các bộ phận tách rời',\n      components: [{\n        name: 'Screen Assembly',\n        color: '#000000',\n        position: {\n          x: 0,\n          y: 0.5,\n          z: 0\n        }\n      }, {\n        name: 'Main Board',\n        color: '#00FF00',\n        position: {\n          x: 0,\n          y: 0,\n          z: 0\n        }\n      }, {\n        name: 'Battery Pack',\n        color: '#FF00FF',\n        position: {\n          x: 0,\n          y: -0.5,\n          z: 0\n        }\n      }, {\n        name: 'Camera Module',\n        color: '#FF0000',\n        position: {\n          x: 0.3,\n          y: 0.3,\n          z: 0.3\n        }\n      }, {\n        name: 'Speaker',\n        color: '#808080',\n        position: {\n          x: -0.3,\n          y: 0.3,\n          z: 0.3\n        }\n      }]\n    }\n  };\n\n  var startAR = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var stream;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return navigator.mediaDevices.getUserMedia({\n                video: {\n                  facingMode: 'environment'\n                }\n              });\n\n            case 4:\n              stream = _context.sent;\n\n              if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n              }\n\n              setIsARMode(true);\n              setIsVRMode(false);\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error accessing camera:', _context.t0);\n              alert('Không thể truy cập camera. Vui lòng kiểm tra quyền truy cập.');\n\n            case 14:\n              setIsLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function startAR() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var startVR = function startVR() {\n    setIsVRMode(true);\n    setIsARMode(false); // VR mode sẽ sử dụng WebXR API\n\n    if ('xr' in navigator) {\n      navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n        if (supported) {\n          console.log('VR được hỗ trợ');\n        } else {\n          console.log('VR không được hỗ trợ');\n        }\n      });\n    }\n  };\n\n  var exitARVR = function exitARVR() {\n    setIsARMode(false);\n    setIsVRMode(false);\n\n    if (videoRef.current && videoRef.current.srcObject) {\n      var tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(function (track) {\n        return track.stop();\n      });\n    }\n  };\n\n  var render3DModel = function render3DModel() {\n    var canvas = canvasRef.current;\n    if (!canvas) return;\n    var ctx = canvas.getContext('2d');\n    var width = canvas.width,\n        height = canvas.height; // Clear canvas\n\n    ctx.clearRect(0, 0, width, height); // Draw 3D model components\n\n    var currentModel = modelData[currentView];\n    currentModel.components.forEach(function (component, index) {\n      var x = width / 2 + component.position.x * 100;\n      var y = height / 2 + component.position.y * 100;\n      var size = 30 + Math.sin(Date.now() / 1000 + index) * 5;\n      ctx.fillStyle = component.color;\n      ctx.beginPath();\n      ctx.arc(x, y, size, 0, 2 * Math.PI);\n      ctx.fill(); // Draw component name\n\n      ctx.fillStyle = '#000';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(component.name, x, y + size + 15);\n    });\n  };\n\n  useEffect(function () {\n    if (isARMode || isVRMode) {\n      var interval = setInterval(render3DModel, 100);\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n  }, [isARMode, isVRMode, currentView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ar-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ar-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"AR/VR Viewer - \", product === null || product === void 0 ? void 0 : product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Xem c\\u1EA5u tr\\xFAc thi\\u1EBFt b\\u1ECB v\\u1EDBi c\\xF4ng ngh\\u1EC7 AR/VR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), !isARMode && !isVRMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ar-viewer-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-modes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ch\\u1ECDn ch\\u1EBF \\u0111\\u1ED9 xem:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn \".concat(currentView === 'exterior' ? 'active' : ''),\n            onClick: function onClick() {\n              return setCurrentView('exterior');\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mode-icon\",\n              children: \"\\uD83D\\uDCF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), \"B\\xEAn ngo\\xE0i\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn \".concat(currentView === 'interior' ? 'active' : ''),\n            onClick: function onClick() {\n              return setCurrentView('interior');\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mode-icon\",\n              children: \"\\uD83D\\uDD27\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), \"B\\xEAn trong\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mode-btn \".concat(currentView === 'exploded' ? 'active' : ''),\n            onClick: function onClick() {\n              return setCurrentView('exploded');\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mode-icon\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), \"T\\xE1ch r\\u1EDDi\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ar-vr-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ar-btn\",\n          onClick: startAR,\n          disabled: isLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), \"B\\u1EAFt \\u0111\\u1EA7u AR\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"vr-btn\",\n          onClick: startVR,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83E\\uDD7D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), \"B\\u1EAFt \\u0111\\u1EA7u VR\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: modelData[currentView].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: modelData[currentView].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"components-list\",\n          children: modelData[currentView].components.map(function (component, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"component-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"component-color\",\n                style: {\n                  backgroundColor: component.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: component.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ar-vr-viewport\",\n      children: [isARMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ar-viewport\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"camera-feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"ar-overlay\",\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this), isVRMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vr-viewport\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"vr-canvas\",\n          width: 800,\n          height: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ar-vr-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn \".concat(currentView === 'exterior' ? 'active' : ''),\n            onClick: function onClick() {\n              return setCurrentView('exterior');\n            },\n            children: \"\\uD83D\\uDCF1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn \".concat(currentView === 'interior' ? 'active' : ''),\n            onClick: function onClick() {\n              return setCurrentView('interior');\n            },\n            children: \"\\uD83D\\uDD27\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn \".concat(currentView === 'exploded' ? 'active' : ''),\n            onClick: function onClick() {\n              return setCurrentView('exploded');\n            },\n            children: \"\\uD83D\\uDCA5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"exit-btn\",\n          onClick: exitARVR,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), \"Tho\\xE1t\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ar-vr-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"H\\u01B0\\u1EDBng d\\u1EABn s\\u1EED d\\u1EE5ng:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Di chuy\\u1EC3n thi\\u1EBFt b\\u1ECB \\u0111\\u1EC3 xem c\\xE1c g\\xF3c \\u0111\\u1ED9 kh\\xE1c nhau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ch\\u1EA1m v\\xE0o c\\xE1c b\\u1ED9 ph\\u1EADn \\u0111\\u1EC3 xem th\\xF4ng tin chi ti\\u1EBFt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"S\\u1EED d\\u1EE5ng c\\xE1c n\\xFAt \\u0111\\u1EC3 chuy\\u1EC3n \\u0111\\u1ED5i ch\\u1EBF \\u0111\\u1ED9 xem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o AR...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ARViewer, \"vSLF3Zts0d6GH+juoGWmMs33whk=\");\n\n_c = ARViewer;\nexport default ARViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARViewer\");","map":{"version":3,"sources":["D:/STUDY/PTIT/NAM_4/KI_1/LT_WEB/BTL_GiuaKy/client-cellphones/src/components/ARViewer/ARViewer.js"],"names":["React","useState","useRef","useEffect","ARViewer","product","isARMode","setIsARMode","isVRMode","setIsVRMode","currentView","setCurrentView","isLoading","setIsLoading","canvasRef","videoRef","modelData","exterior","name","description","components","color","position","x","y","z","interior","exploded","startAR","navigator","mediaDevices","getUserMedia","video","facingMode","stream","current","srcObject","console","error","alert","startVR","xr","isSessionSupported","then","supported","log","exitARVR","tracks","getTracks","forEach","track","stop","render3DModel","canvas","ctx","getContext","width","height","clearRect","currentModel","component","index","size","Math","sin","Date","now","fillStyle","beginPath","arc","PI","fill","font","textAlign","fillText","interval","setInterval","clearInterval","map","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './ARViewer.css';\r\n\r\nfunction ARViewer({ product }) {\r\n    const [isARMode, setIsARMode] = useState(false);\r\n    const [isVRMode, setIsVRMode] = useState(false);\r\n    const [currentView, setCurrentView] = useState('exterior');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const canvasRef = useRef(null);\r\n    const videoRef = useRef(null);\r\n\r\n    // Mock 3D model data - sẽ được thay thế bằng data thực tế từ backend\r\n    const modelData = {\r\n        exterior: {\r\n            name: 'Exterior View',\r\n            description: 'Xem bên ngoài thiết bị',\r\n            components: [\r\n                { name: 'Màn hình', color: '#000000', position: { x: 0, y: 0, z: 0 } },\r\n                { name: 'Khung máy', color: '#C0C0C0', position: { x: 0, y: 0, z: -1 } },\r\n                { name: 'Camera', color: '#FF0000', position: { x: 0, y: 0.5, z: 0.5 } },\r\n                { name: 'Nút nguồn', color: '#808080', position: { x: 0.3, y: 0, z: 0 } }\r\n            ]\r\n        },\r\n        interior: {\r\n            name: 'Interior View',\r\n            description: 'Xem bên trong thiết bị',\r\n            components: [\r\n                { name: 'CPU', color: '#00FF00', position: { x: 0, y: 0, z: 0 } },\r\n                { name: 'RAM', color: '#0000FF', position: { x: 0.2, y: 0, z: 0 } },\r\n                { name: 'Storage', color: '#FFFF00', position: { x: -0.2, y: 0, z: 0 } },\r\n                { name: 'Battery', color: '#FF00FF', position: { x: 0, y: -0.3, z: 0 } },\r\n                { name: 'Motherboard', color: '#00FFFF', position: { x: 0, y: 0, z: -0.1 } }\r\n            ]\r\n        },\r\n        exploded: {\r\n            name: 'Exploded View',\r\n            description: 'Xem các bộ phận tách rời',\r\n            components: [\r\n                { name: 'Screen Assembly', color: '#000000', position: { x: 0, y: 0.5, z: 0 } },\r\n                { name: 'Main Board', color: '#00FF00', position: { x: 0, y: 0, z: 0 } },\r\n                { name: 'Battery Pack', color: '#FF00FF', position: { x: 0, y: -0.5, z: 0 } },\r\n                { name: 'Camera Module', color: '#FF0000', position: { x: 0.3, y: 0.3, z: 0.3 } },\r\n                { name: 'Speaker', color: '#808080', position: { x: -0.3, y: 0.3, z: 0.3 } }\r\n            ]\r\n        }\r\n    };\r\n\r\n    const startAR = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            // Yêu cầu quyền truy cập camera\r\n            const stream = await navigator.mediaDevices.getUserMedia({ \r\n                video: { facingMode: 'environment' } \r\n            });\r\n            \r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n            }\r\n            \r\n            setIsARMode(true);\r\n            setIsVRMode(false);\r\n        } catch (error) {\r\n            console.error('Error accessing camera:', error);\r\n            alert('Không thể truy cập camera. Vui lòng kiểm tra quyền truy cập.');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const startVR = () => {\r\n        setIsVRMode(true);\r\n        setIsARMode(false);\r\n        // VR mode sẽ sử dụng WebXR API\r\n        if ('xr' in navigator) {\r\n            navigator.xr.isSessionSupported('immersive-vr').then((supported) => {\r\n                if (supported) {\r\n                    console.log('VR được hỗ trợ');\r\n                } else {\r\n                    console.log('VR không được hỗ trợ');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const exitARVR = () => {\r\n        setIsARMode(false);\r\n        setIsVRMode(false);\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            const tracks = videoRef.current.srcObject.getTracks();\r\n            tracks.forEach(track => track.stop());\r\n        }\r\n    };\r\n\r\n    const render3DModel = () => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        const { width, height } = canvas;\r\n        \r\n        // Clear canvas\r\n        ctx.clearRect(0, 0, width, height);\r\n        \r\n        // Draw 3D model components\r\n        const currentModel = modelData[currentView];\r\n        currentModel.components.forEach((component, index) => {\r\n            const x = width / 2 + component.position.x * 100;\r\n            const y = height / 2 + component.position.y * 100;\r\n            const size = 30 + Math.sin(Date.now() / 1000 + index) * 5;\r\n            \r\n            ctx.fillStyle = component.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, size, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n            \r\n            // Draw component name\r\n            ctx.fillStyle = '#000';\r\n            ctx.font = '12px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(component.name, x, y + size + 15);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isARMode || isVRMode) {\r\n            const interval = setInterval(render3DModel, 100);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [isARMode, isVRMode, currentView]);\r\n\r\n    return (\r\n        <div className=\"ar-viewer\">\r\n            <div className=\"ar-viewer-header\">\r\n                <h2>AR/VR Viewer - {product?.name}</h2>\r\n                <p>Xem cấu trúc thiết bị với công nghệ AR/VR</p>\r\n            </div>\r\n\r\n            {!isARMode && !isVRMode ? (\r\n                <div className=\"ar-viewer-controls\">\r\n                    <div className=\"view-modes\">\r\n                        <h3>Chọn chế độ xem:</h3>\r\n                        <div className=\"mode-buttons\">\r\n                            <button \r\n                                className={`mode-btn ${currentView === 'exterior' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentView('exterior')}\r\n                            >\r\n                                <span className=\"mode-icon\">📱</span>\r\n                                Bên ngoài\r\n                            </button>\r\n                            <button \r\n                                className={`mode-btn ${currentView === 'interior' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentView('interior')}\r\n                            >\r\n                                <span className=\"mode-icon\">🔧</span>\r\n                                Bên trong\r\n                            </button>\r\n                            <button \r\n                                className={`mode-btn ${currentView === 'exploded' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentView('exploded')}\r\n                            >\r\n                                <span className=\"mode-icon\">💥</span>\r\n                                Tách rời\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ar-vr-buttons\">\r\n                        <button \r\n                            className=\"ar-btn\"\r\n                            onClick={startAR}\r\n                            disabled={isLoading}\r\n                        >\r\n                            <span className=\"btn-icon\">📷</span>\r\n                            Bắt đầu AR\r\n                        </button>\r\n                        <button \r\n                            className=\"vr-btn\"\r\n                            onClick={startVR}\r\n                        >\r\n                            <span className=\"btn-icon\">🥽</span>\r\n                            Bắt đầu VR\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"model-preview\">\r\n                        <h3>{modelData[currentView].name}</h3>\r\n                        <p>{modelData[currentView].description}</p>\r\n                        <div className=\"components-list\">\r\n                            {modelData[currentView].components.map((component, index) => (\r\n                                <div key={index} className=\"component-item\">\r\n                                    <div \r\n                                        className=\"component-color\" \r\n                                        style={{ backgroundColor: component.color }}\r\n                                    ></div>\r\n                                    <span>{component.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"ar-vr-viewport\">\r\n                    {isARMode && (\r\n                        <div className=\"ar-viewport\">\r\n                            <video \r\n                                ref={videoRef}\r\n                                autoPlay \r\n                                playsInline \r\n                                className=\"camera-feed\"\r\n                            />\r\n                            <canvas \r\n                                ref={canvasRef}\r\n                                className=\"ar-overlay\"\r\n                                width={640}\r\n                                height={480}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {isVRMode && (\r\n                        <div className=\"vr-viewport\">\r\n                            <canvas \r\n                                ref={canvasRef}\r\n                                className=\"vr-canvas\"\r\n                                width={800}\r\n                                height={600}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"ar-vr-controls\">\r\n                        <div className=\"view-controls\">\r\n                            <button \r\n                                className={`control-btn ${currentView === 'exterior' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentView('exterior')}\r\n                            >\r\n                                📱\r\n                            </button>\r\n                            <button \r\n                                className={`control-btn ${currentView === 'interior' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentView('interior')}\r\n                            >\r\n                                🔧\r\n                            </button>\r\n                            <button \r\n                                className={`control-btn ${currentView === 'exploded' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentView('exploded')}\r\n                            >\r\n                                💥\r\n                            </button>\r\n                        </div>\r\n                        \r\n                        <button className=\"exit-btn\" onClick={exitARVR}>\r\n                            <span className=\"btn-icon\">❌</span>\r\n                            Thoát\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"ar-vr-instructions\">\r\n                        <h4>Hướng dẫn sử dụng:</h4>\r\n                        <ul>\r\n                            <li>Di chuyển thiết bị để xem các góc độ khác nhau</li>\r\n                            <li>Chạm vào các bộ phận để xem thông tin chi tiết</li>\r\n                            <li>Sử dụng các nút để chuyển đổi chế độ xem</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isLoading && (\r\n                <div className=\"loading-overlay\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <p>Đang khởi tạo AR...</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ARViewer;\r\n"]},"metadata":{},"sourceType":"module"}