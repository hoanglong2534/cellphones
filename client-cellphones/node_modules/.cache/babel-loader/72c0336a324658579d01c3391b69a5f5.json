{"ast":null,"code":"import _objectSpread from \"C:/Users/admin/Download/project-long/cellphones/client-cellphones/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Download\\\\project-long\\\\cellphones\\\\client-cellphones\\\\src\\\\components\\\\ARViewer\\\\R3FXRViewer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpinningBox(props) {\n  _s();\n  const meshRef = useRef();\n  useFrame((_state, delta) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x += delta * 0.5;\n      meshRef.current.rotation.y += delta * 0.8;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n    ref: meshRef\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [0.25, 0.25, 0.25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"#4CC3D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(SpinningBox, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningBox;\nfunction ProductModel(_ref) {\n  _s2();\n  let {\n    url,\n    scale = 0.5\n  } = _ref;\n  const groupRef = useRef();\n  const [sceneObj, setSceneObj] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    let cancelled = false;\n    async function load() {\n      try {\n        const mod = await import('three/examples/jsm/loaders/GLTFLoader.js');\n        const GLTFLoader = mod.GLTFLoader || mod.default;\n        const loader = new GLTFLoader();\n        loader.load(url, gltf => {\n          var _gltf$scenes;\n          if (cancelled) return;\n          const obj = gltf.scene || ((_gltf$scenes = gltf.scenes) === null || _gltf$scenes === void 0 ? void 0 : _gltf$scenes[0]);\n          if (!obj) {\n            setError('Không thể đọc model');\n            return;\n          }\n          // Center and scale roughly\n          const bbox = new THREE.Box3().setFromObject(obj);\n          const size = new THREE.Vector3();\n          bbox.getSize(size);\n          const maxDim = Math.max(size.x, size.y, size.z) || 1;\n          const desired = scale; // meters\n          const s = desired / maxDim;\n          obj.scale.setScalar(s);\n          const center = new THREE.Vector3();\n          bbox.getCenter(center);\n          obj.position.sub(center.multiplyScalar(s));\n          setSceneObj(obj);\n        }, undefined, () => {\n          if (!cancelled) setError('Lỗi khi tải model');\n        });\n      } catch (e) {\n        if (!cancelled) setError('Không tải được GLTFLoader');\n      }\n    }\n    if (url) load();\n    return () => {\n      cancelled = true;\n    };\n  }, [url, scale]);\n  if (error) return null;\n  if (!sceneObj) return null;\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: sceneObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s2(ProductModel, \"VsZQFl6EiIDXZO1cLDLEc3W97dY=\");\n_c2 = ProductModel;\nexport default function R3FXRViewer(_ref2) {\n  _s3();\n  let {\n    modelUrl\n  } = _ref2;\n  const [gl, setGl] = useState(null);\n  const [arSupported, setArSupported] = useState(false);\n  const [vrSupported, setVrSupported] = useState(false);\n  const [isPresenting, setIsPresenting] = useState(false);\n  const modelGroupRef = useRef(null);\n  useEffect(() => {\n    if (!gl) return;\n    gl.xr.enabled = true;\n    const onSessionStart = () => setIsPresenting(true);\n    const onSessionEnd = () => setIsPresenting(false);\n    gl.xr.addEventListener('sessionstart', onSessionStart);\n    gl.xr.addEventListener('sessionend', onSessionEnd);\n    return () => {\n      gl.xr.removeEventListener('sessionstart', onSessionStart);\n      gl.xr.removeEventListener('sessionend', onSessionEnd);\n    };\n  }, [gl]);\n  useEffect(() => {\n    // WebXR feature detection\n    let cancelled = false;\n    async function checkSupport() {\n      try {\n        if (navigator.xr && navigator.xr.isSessionSupported) {\n          const [arOK, vrOK] = await Promise.all([navigator.xr.isSessionSupported('immersive-ar').catch(() => false), navigator.xr.isSessionSupported('immersive-vr').catch(() => false)]);\n          if (!cancelled) {\n            setArSupported(Boolean(arOK));\n            setVrSupported(Boolean(vrOK));\n          }\n        }\n      } catch (_) {}\n    }\n    checkSupport();\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n  async function enterAR() {\n    if (!gl || !navigator.xr) return;\n    try {\n      const session = await navigator.xr.requestSession('immersive-ar', {\n        requiredFeatures: ['local-floor']\n      });\n      await gl.xr.setSession(session);\n      // Tap to place: set model in front of camera on select\n      const onSelect = () => {\n        try {\n          const renderer = gl;\n          const xrCam = renderer.xr.getCamera();\n          const dir = new THREE.Vector3(0, 0, -1).applyQuaternion(xrCam.quaternion);\n          const pos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld).add(dir.multiplyScalar(0.6));\n          if (modelGroupRef.current) {\n            modelGroupRef.current.position.copy(pos);\n          }\n        } catch (_unused) {}\n      };\n      session.addEventListener('select', onSelect);\n      session.addEventListener('end', () => {\n        try {\n          session.removeEventListener('select', onSelect);\n        } catch (_unused2) {}\n      });\n    } catch (e) {\n      // no-op\n    }\n  }\n  async function enterVR() {\n    if (!gl || !navigator.xr) return;\n    try {\n      const session = await navigator.xr.requestSession('immersive-vr', {\n        optionalFeatures: ['local-floor']\n      });\n      await gl.xr.setSession(session);\n    } catch (e) {\n      // no-op\n    }\n  }\n  async function exitXR() {\n    try {\n      var _gl$xr;\n      const session = gl === null || gl === void 0 ? void 0 : (_gl$xr = gl.xr) === null || _gl$xr === void 0 ? void 0 : _gl$xr.getSession();\n      if (session) await session.end();\n    } catch (_unused3) {}\n  }\n  function placeInFront() {\n    try {\n      if (!gl) return;\n      const xrCam = gl.xr.getCamera();\n      const dir = new THREE.Vector3(0, 0, -1).applyQuaternion(xrCam.quaternion);\n      const pos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld).add(dir.multiplyScalar(0.6));\n      if (modelGroupRef.current) {\n        modelGroupRef.current.position.copy(pos);\n      }\n    } catch (_unused4) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gap: 12\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gap: 8,\n        gridTemplateColumns: '1fr 1fr'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enterAR,\n        disabled: !arSupported || !gl,\n        className: \"btn btn-primary\",\n        children: \"ENTER AR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enterVR,\n        disabled: !vrSupported || !gl,\n        className: \"btn btn-secondary\",\n        children: \"ENTER VR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: 420,\n        borderRadius: 12,\n        overflow: 'hidden',\n        border: '1px solid #333',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        onCreated: _ref3 => {\n          let {\n            gl: renderer,\n            scene,\n            camera\n          } = _ref3;\n          // Match device pixel ratio for clarity\n          renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n          renderer.outputEncoding = THREE.sRGBEncoding;\n          setGl(renderer);\n          // Initial camera position\n          camera.position.set(0, 0.25, 1.2);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [1, 1, 1],\n          intensity: 0.8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          rotation: [-Math.PI / 2, 0, 0],\n          position: [0, -0.2, 0],\n          children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n            args: [10, 10]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n            color: \"#222\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), modelUrl ? /*#__PURE__*/_jsxDEV(\"group\", {\n          ref: modelGroupRef,\n          position: [0, 0.1, 0],\n          children: /*#__PURE__*/_jsxDEV(ProductModel, {\n            url: modelUrl,\n            scale: 0.4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(SpinningBox, {\n          position: [0, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), isPresenting && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 8,\n          left: 8,\n          right: 8,\n          display: 'flex',\n          gap: 8,\n          justifyContent: 'space-between',\n          pointerEvents: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gap: 8,\n            gridAutoFlow: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: placeInFront,\n            className: \"btn btn-primary\",\n            children: \"\\u0110\\u1EB7t tr\\u01B0\\u1EDBc m\\u1EB7t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exitXR,\n          className: \"btn btn-secondary\",\n          children: \"Tho\\xE1t AR/VR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 14,\n        color: '#888',\n        margin: 0\n      },\n      children: \"G\\u1EE3i \\xFD: \\\"ENTER AR\\\" c\\u1EA7n thi\\u1EBFt b\\u1ECB h\\u1ED7 tr\\u1EE3 WebXR (Chrome Android). \\\"ENTER VR\\\" c\\u1EA7n tr\\xECnh duy\\u1EC7t/thi\\u1EBFt b\\u1ECB h\\u1ED7 tr\\u1EE3 VR.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n}\n_s3(R3FXRViewer, \"sRUhtnLPEUk5QGlt+nNYz+R7Gqk=\");\n_c3 = R3FXRViewer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SpinningBox\");\n$RefreshReg$(_c2, \"ProductModel\");\n$RefreshReg$(_c3, \"R3FXRViewer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Canvas","useFrame","useThree","THREE","jsxDEV","_jsxDEV","SpinningBox","props","_s","meshRef","_state","delta","current","rotation","x","y","_objectSpread","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","ProductModel","_ref","_s2","url","scale","groupRef","sceneObj","setSceneObj","error","setError","cancelled","load","mod","GLTFLoader","default","loader","gltf","_gltf$scenes","obj","scene","scenes","bbox","Box3","setFromObject","size","Vector3","getSize","maxDim","Math","max","z","desired","s","setScalar","center","getCenter","position","sub","multiplyScalar","undefined","e","object","_c2","R3FXRViewer","_ref2","_s3","modelUrl","gl","setGl","arSupported","setArSupported","vrSupported","setVrSupported","isPresenting","setIsPresenting","modelGroupRef","xr","enabled","onSessionStart","onSessionEnd","addEventListener","removeEventListener","checkSupport","navigator","isSessionSupported","arOK","vrOK","Promise","all","catch","Boolean","_","enterAR","session","requestSession","requiredFeatures","setSession","onSelect","renderer","xrCam","getCamera","dir","applyQuaternion","quaternion","pos","setFromMatrixPosition","matrixWorld","add","copy","_unused","_unused2","enterVR","optionalFeatures","exitXR","_gl$xr","getSession","end","_unused3","placeInFront","_unused4","style","display","gap","gridTemplateColumns","onClick","disabled","className","width","height","borderRadius","overflow","border","onCreated","_ref3","camera","setPixelRatio","min","window","devicePixelRatio","outputEncoding","sRGBEncoding","set","intensity","PI","top","left","right","justifyContent","pointerEvents","gridAutoFlow","fontSize","margin","_c3","$RefreshReg$"],"sources":["C:/Users/admin/Download/project-long/cellphones/client-cellphones/src/components/ARViewer/R3FXRViewer.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\r\nimport * as THREE from 'three';\r\n\r\nfunction SpinningBox(props) {\r\n    const meshRef = useRef();\r\n    useFrame((_state, delta) => {\r\n        if (meshRef.current) {\r\n            meshRef.current.rotation.x += delta * 0.5;\r\n            meshRef.current.rotation.y += delta * 0.8;\r\n        }\r\n    });\r\n    return (\r\n        <mesh ref={meshRef} {...props}>\r\n            <boxGeometry args={[0.25, 0.25, 0.25]} />\r\n            <meshStandardMaterial color=\"#4CC3D9\" />\r\n        </mesh>\r\n    );\r\n}\r\n\r\nfunction ProductModel({ url, scale = 0.5 }) {\r\n    const groupRef = useRef();\r\n    const [sceneObj, setSceneObj] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        let cancelled = false;\r\n        async function load() {\r\n            try {\r\n                const mod = await import('three/examples/jsm/loaders/GLTFLoader.js');\r\n                const GLTFLoader = mod.GLTFLoader || mod.default;\r\n                const loader = new GLTFLoader();\r\n                loader.load(\r\n                    url,\r\n                    (gltf) => {\r\n                        if (cancelled) return;\r\n                        const obj = gltf.scene || gltf.scenes?.[0];\r\n                        if (!obj) {\r\n                            setError('Không thể đọc model');\r\n                            return;\r\n                        }\r\n                        // Center and scale roughly\r\n                        const bbox = new THREE.Box3().setFromObject(obj);\r\n                        const size = new THREE.Vector3();\r\n                        bbox.getSize(size);\r\n                        const maxDim = Math.max(size.x, size.y, size.z) || 1;\r\n                        const desired = scale; // meters\r\n                        const s = desired / maxDim;\r\n                        obj.scale.setScalar(s);\r\n                        const center = new THREE.Vector3();\r\n                        bbox.getCenter(center);\r\n                        obj.position.sub(center.multiplyScalar(s));\r\n                        setSceneObj(obj);\r\n                    },\r\n                    undefined,\r\n                    () => {\r\n                        if (!cancelled) setError('Lỗi khi tải model');\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                if (!cancelled) setError('Không tải được GLTFLoader');\r\n            }\r\n        }\r\n        if (url) load();\r\n        return () => { cancelled = true; };\r\n    }, [url, scale]);\r\n\r\n    if (error) return null;\r\n    if (!sceneObj) return null;\r\n    return <primitive object={sceneObj} />;\r\n}\r\n\r\nexport default function R3FXRViewer({ modelUrl }) {\r\n    const [gl, setGl] = useState(null);\r\n    const [arSupported, setArSupported] = useState(false);\r\n    const [vrSupported, setVrSupported] = useState(false);\r\n    const [isPresenting, setIsPresenting] = useState(false);\r\n    const modelGroupRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!gl) return;\r\n        gl.xr.enabled = true;\r\n        const onSessionStart = () => setIsPresenting(true);\r\n        const onSessionEnd = () => setIsPresenting(false);\r\n        gl.xr.addEventListener('sessionstart', onSessionStart);\r\n        gl.xr.addEventListener('sessionend', onSessionEnd);\r\n        return () => {\r\n            gl.xr.removeEventListener('sessionstart', onSessionStart);\r\n            gl.xr.removeEventListener('sessionend', onSessionEnd);\r\n        };\r\n    }, [gl]);\r\n\r\n    useEffect(() => {\r\n        // WebXR feature detection\r\n        let cancelled = false;\r\n        async function checkSupport() {\r\n            try {\r\n                if (navigator.xr && navigator.xr.isSessionSupported) {\r\n                    const [arOK, vrOK] = await Promise.all([\r\n                        navigator.xr.isSessionSupported('immersive-ar').catch(() => false),\r\n                        navigator.xr.isSessionSupported('immersive-vr').catch(() => false)\r\n                    ]);\r\n                    if (!cancelled) {\r\n                        setArSupported(Boolean(arOK));\r\n                        setVrSupported(Boolean(vrOK));\r\n                    }\r\n                }\r\n            } catch (_) {}\r\n        }\r\n        checkSupport();\r\n        return () => { cancelled = true; };\r\n    }, []);\r\n\r\n    async function enterAR() {\r\n        if (!gl || !navigator.xr) return;\r\n        try {\r\n            const session = await navigator.xr.requestSession('immersive-ar', {\r\n                requiredFeatures: ['local-floor']\r\n            });\r\n            await gl.xr.setSession(session);\r\n            // Tap to place: set model in front of camera on select\r\n            const onSelect = () => {\r\n                try {\r\n                    const renderer = gl;\r\n                    const xrCam = renderer.xr.getCamera();\r\n                    const dir = new THREE.Vector3(0, 0, -1).applyQuaternion(xrCam.quaternion);\r\n                    const pos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld).add(dir.multiplyScalar(0.6));\r\n                    if (modelGroupRef.current) {\r\n                        modelGroupRef.current.position.copy(pos);\r\n                    }\r\n                } catch {}\r\n            };\r\n            session.addEventListener('select', onSelect);\r\n            session.addEventListener('end', () => {\r\n                try { session.removeEventListener('select', onSelect); } catch {}\r\n            });\r\n        } catch (e) {\r\n            // no-op\r\n        }\r\n    }\r\n\r\n    async function enterVR() {\r\n        if (!gl || !navigator.xr) return;\r\n        try {\r\n            const session = await navigator.xr.requestSession('immersive-vr', {\r\n                optionalFeatures: ['local-floor']\r\n            });\r\n            await gl.xr.setSession(session);\r\n        } catch (e) {\r\n            // no-op\r\n        }\r\n    }\r\n\r\n    async function exitXR() {\r\n        try {\r\n            const session = gl?.xr?.getSession();\r\n            if (session) await session.end();\r\n        } catch {}\r\n    }\r\n\r\n    function placeInFront() {\r\n        try {\r\n            if (!gl) return;\r\n            const xrCam = gl.xr.getCamera();\r\n            const dir = new THREE.Vector3(0, 0, -1).applyQuaternion(xrCam.quaternion);\r\n            const pos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld).add(dir.multiplyScalar(0.6));\r\n            if (modelGroupRef.current) {\r\n                modelGroupRef.current.position.copy(pos);\r\n            }\r\n        } catch {}\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'grid', gap: 12 }}>\r\n            <div style={{ display: 'grid', gap: 8, gridTemplateColumns: '1fr 1fr' }}>\r\n                <button onClick={enterAR} disabled={!arSupported || !gl} className=\"btn btn-primary\">ENTER AR</button>\r\n                <button onClick={enterVR} disabled={!vrSupported || !gl} className=\"btn btn-secondary\">ENTER VR</button>\r\n            </div>\r\n\r\n            <div style={{ width: '100%', height: 420, borderRadius: 12, overflow: 'hidden', border: '1px solid #333', position: 'relative' }}>\r\n                <Canvas onCreated={({ gl: renderer, scene, camera }) => {\r\n                    // Match device pixel ratio for clarity\r\n                    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n                    renderer.outputEncoding = THREE.sRGBEncoding;\r\n                    setGl(renderer);\r\n                    // Initial camera position\r\n                    camera.position.set(0, 0.25, 1.2);\r\n                }}>\r\n                    <ambientLight intensity={0.5} />\r\n                    <directionalLight position={[1, 1, 1]} intensity={0.8} />\r\n\r\n                    {/* Ground (only visible in VR/desktop) */}\r\n                    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.2, 0]}>\r\n                        <planeGeometry args={[10, 10]} />\r\n                        <meshStandardMaterial color=\"#222\" />\r\n                    </mesh>\r\n\r\n                    {modelUrl ? (\r\n                        <group ref={modelGroupRef} position={[0, 0.1, 0]}>\r\n                            <ProductModel url={modelUrl} scale={0.4} />\r\n                        </group>\r\n                    ) : (\r\n                        <SpinningBox position={[0, 0, 0]} />\r\n                    )}\r\n                </Canvas>\r\n\r\n                {isPresenting && (\r\n                    <div style={{ position: 'absolute', top: 8, left: 8, right: 8, display: 'flex', gap: 8, justifyContent: 'space-between', pointerEvents: 'auto' }}>\r\n                        <div style={{ display: 'grid', gap: 8, gridAutoFlow: 'column' }}>\r\n                            <button onClick={placeInFront} className=\"btn btn-primary\">Đặt trước mặt</button>\r\n                        </div>\r\n                        <button onClick={exitXR} className=\"btn btn-secondary\">Thoát AR/VR</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <p style={{ fontSize: 14, color: '#888', margin: 0 }}>\r\n                Gợi ý: \"ENTER AR\" cần thiết bị hỗ trợ WebXR (Chrome Android). \"ENTER VR\" cần trình duyệt/thiết bị hỗ trợ VR.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}